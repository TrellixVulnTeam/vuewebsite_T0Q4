{"remainingRequest":"/Users/sylvia/myproject/mysite/ff/node_modules/babel-loader/lib/index.js!/Users/sylvia/myproject/mysite/ff/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/sylvia/myproject/mysite/ff/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/sylvia/myproject/mysite/ff/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/sylvia/myproject/mysite/ff/src/components/VuePersianDatetimePicker.vue?vue&type=template&id=9d127f1a","dependencies":[{"path":"/Users/sylvia/myproject/mysite/ff/src/components/VuePersianDatetimePicker.vue","mtime":1637689243843},{"path":"/Users/sylvia/myproject/mysite/ff/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sylvia/myproject/mysite/ff/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/sylvia/myproject/mysite/ff/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/sylvia/myproject/mysite/ff/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sylvia/myproject/mysite/ff/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/sylvia/myproject/mysite/ff/src/components/VuePersianDatetimePicker.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <span\n    class=\"vpd-main\"\n    :data-type=\"type\"\n    :data-placement=\"popoverPlace\"\n    :data-locale=\"localeData.name\"\n    :data-locale-dir=\"localeData.config.dir\"\n    :class=\"{ 'vpd-is-popover': isPopover }\"\n  >\n    <span\n      v-if=\"!element\"\n      ref=\"inputGroup\"\n      :class=\"['vpd-input-group', { 'vpd-disabled': disabled }]\"\n    >\n      <label\n        :for=\"id\"\n        class=\"vpd-icon-btn\"\n        :style=\"{ 'background-color': color }\"\n        @click.prevent.stop=\"visible = !visible\"\n      >\n        <slot name=\"label\">\n          <time-icon v-if=\"type === 'time'\" width=\"16px\" height=\"16px\" />\n          <calendar-icon v-else width=\"16px\" height=\"16px\" />\n          <span v-if=\"label\" v-text=\"label\" />\n        </slot>\n      </label>\n      <input\n        :id=\"id\"\n        ref=\"input\"\n        type=\"text\"\n        :name=\"name\"\n        :class=\"[inputClass, { 'vpd-is-editable': editable }]\"\n        :placeholder=\"placeholder\"\n        :value=\"displayValue\"\n        :disabled=\"disabled\"\n        @focus=\"focus\"\n        @blur=\"setOutput\"\n        @keydown.enter=\"setOutput\"\n      />\n      <input\n        v-if=\"altName\"\n        type=\"hidden\"\n        :name=\"altName\"\n        :value=\"altFormatted\"\n      />\n      <i\n        v-if=\"clearable && !disabled && displayValue\"\n        class=\"vpd-clear-btn\"\n        @click=\"clearValue\"\n      >\n        <slot name=\"clear-btn\" v-bind=\"{ vm }\">x</slot>\n      </i>\n    </span>\n\n    <input\n      v-else-if=\"altName\"\n      type=\"hidden\"\n      :name=\"altName\"\n      :value=\"altFormatted\"\n    />\n\n    <transition :name=\"isPopover ? '' : 'vpd-fade-scale'\">\n      <div\n        v-if=\"visible\"\n        ref=\"picker\"\n        :class=\"[\n          'vpd-wrapper',\n          `vpd-dir-${localeData.config.dir}`,\n          {\n            'vpd-is-range': range,\n            'vpd-is-inline': inline,\n            'vpd-is-multiple': multiple,\n            'vpd-compact-time': compactTime,\n            'vpd-no-footer': autoSubmit && !hasStep('t')\n          }\n        ]\"\n        :data-type=\"type\"\n        @click.self=\"wrapperClick\"\n      >\n        <div ref=\"container\" class=\"vpd-container\">\n          <div class=\"vpd-content\">\n            <div class=\"vpd-header\" :style=\"{ 'background-color': color }\">\n              <div\n                v-if=\"['date', 'datetime', 'year-month'].indexOf(type) !== -1\"\n                :class=\"['vpd-year-label', directionClass]\"\n                @click=\"goStep('y')\"\n              >\n                <transition name=\"slideY\">\n                  <span :key=\"selectedDate.xYear()\">\n                    <slot name=\"header-year\" v-bind=\"{ vm, selectedDate }\">\n                      {{ convertToLocaleNumber(selectedDate.xYear()) }}\n                    </slot>\n                  </span>\n                </transition>\n              </div>\n              <div\n                v-if=\"type !== 'year-month'\"\n                :class=\"['vpd-date', directionClass]\"\n              >\n                <transition name=\"slideY\">\n                  <span :key=\"formattedDate\">\n                    <slot name=\"header-date\" v-bind=\"{ vm, formattedDate }\">\n                      {{ convertToLocaleNumber(formattedDate) }}\n                    </slot>\n                  </span>\n                </transition>\n              </div>\n              <slot\n                v-if=\"locales.length > 1\"\n                name=\"locales\"\n                v-bind=\"{ vm, locales, setLocale }\"\n              >\n                <locale-change\n                  :locale-data=\"localeData\"\n                  :core=\"core\"\n                  :locales=\"locales\"\n                  class=\"vpd-locales\"\n                  @change=\"setLocale\"\n                />\n              </slot>\n            </div>\n            <div class=\"vpd-body\">\n              <template v-if=\"hasStep('d')\">\n                <div :class=\"['vpd-controls', directionClassDate]\">\n                  <button\n                    type=\"button\"\n                    class=\"vpd-next\"\n                    :title=\"lang.nextMonth\"\n                    :disabled=\"nextMonthDisabled\"\n                    @click=\"nextMonth\"\n                  >\n                    <arrow\n                      width=\"10\"\n                      fill=\"#000\"\n                      direction=\"right\"\n                      style=\"vertical-align: middle\"\n                    />\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"vpd-prev\"\n                    :title=\"lang.prevMonth\"\n                    :disabled=\"prevMonthDisabled\"\n                    @click=\"prevMonth\"\n                  >\n                    <arrow\n                      width=\"10\"\n                      fill=\"#000\"\n                      direction=\"left\"\n                      style=\"vertical-align: middle\"\n                    />\n                  </button>\n                  <transition name=\"slideX\">\n                    <div\n                      :key=\"date.xMonth()\"\n                      class=\"vpd-month-label\"\n                      @click=\"goStep('m')\"\n                    >\n                      <slot name=\"month-name\" v-bind=\"{ vm, date, color }\">\n                        <span\n                          :style=\"{ 'border-color': color, color }\"\n                          v-text=\"\n                            convertToLocaleNumber(date.xFormat('jMMMM jYYYY'))\n                          \"\n                        />\n                      </slot>\n                    </div>\n                  </transition>\n                </div>\n                <div\n                  class=\"vpd-clearfix\"\n                  :class=\"['vpd-month', directionClassDate]\"\n                >\n                  <div class=\"vpd-clearfix vpd-week\">\n                    <div\n                      v-for=\"(day, i) in weekDays\"\n                      :key=\"`${i}-${day}`\"\n                      class=\"vpd-weekday\"\n                    >\n                      <slot name=\"weekday\" v-bind=\"{ vm, day }\">\n                        {{ day }}\n                      </slot>\n                    </div>\n                  </div>\n                  <div\n                    class=\"vpd-days\"\n                    :style=\"{ height: month.length * 40 + 'px' }\"\n                    @mouseleave=\"hoveredItem = null\"\n                  >\n                    <transition name=\"slideX\" :class=\"directionClassDate\">\n                      <div :key=\"date.xMonth()\">\n                        <div\n                          v-for=\"(m, mi) in monthDays\"\n                          :key=\"mi\"\n                          class=\"vpd-clearfix\"\n                        >\n                          <div\n                            v-for=\"(day, di) in m\"\n                            :key=\"di\"\n                            :class=\"[\n                              'vpd-day',\n                              {\n                                'vpd-selected': day.selected,\n                                'vpd-empty': day.date == null,\n                                'vpd-range-first': day.isFirst,\n                                'vpd-range-last': day.isLast,\n                                'vpd-range-between': day.isBetween,\n                                'vpd-range-hover': hoveredItem && day.isHover\n                              },\n                              day.attributes.class\n                            ]\"\n                            v-bind=\"day.attributes\"\n                            :disabled=\"day.disabled\"\n                            @click=\"selectDay(day)\"\n                            @mouseover=\"hoveredItem = day.date\"\n                          >\n                            <template v-if=\"day.date != null\">\n                              <slot name=\"day-item\" v-bind=\"{ vm, day, color }\">\n                                <span\n                                  class=\"vpd-day-effect\"\n                                  :style=\"{ 'background-color': color }\"\n                                />\n                                <span\n                                  class=\"vpd-day-text\"\n                                  v-text=\"convertToLocaleNumber(day.formatted)\"\n                                />\n                              </slot>\n                            </template>\n                          </div>\n                        </div>\n                      </div>\n                    </transition>\n                  </div>\n                </div>\n              </template>\n\n              <div v-else style=\"height:250px\" />\n\n              <transition name=\"fade\">\n                <div\n                  v-if=\"hasStep('y')\"\n                  v-show=\"currentStep === 'y'\"\n                  ref=\"year\"\n                  :class=\"[\n                    'vpd-addon-list',\n                    { 'vpd-can-close': steps.length > 1 }\n                  ]\"\n                >\n                  <div class=\"vpd-addon-list-content\">\n                    <div\n                      v-for=\"(year, yi) in years\"\n                      :key=\"yi\"\n                      v-bind=\"year.attributes\"\n                      :class=\"[\n                        'vpd-addon-list-item',\n                        { 'vpd-selected': year.selected },\n                        year.attributes.class\n                      ]\"\n                      :style=\"[\n                        { color: year.selected ? color : '' },\n                        year.attributes.style\n                      ]\"\n                      :disabled=\"year.disabled\"\n                      @click=\"selectYear(year)\"\n                    >\n                      <slot name=\"year-item\" v-bind=\"{ vm, year, color }\">\n                        {{ convertToLocaleNumber(year.xFormat('jYYYY')) }}\n                      </slot>\n                    </div>\n                  </div>\n                </div>\n              </transition>\n\n              <transition name=\"fade\">\n                <div\n                  v-if=\"hasStep('m')\"\n                  v-show=\"currentStep === 'm'\"\n                  ref=\"month\"\n                  :class=\"[\n                    'vpd-addon-list vpd-month-list',\n                    { 'vpd-can-close': steps.length > 1 }\n                  ]\"\n                >\n                  <div class=\"vpd-addon-list-content\">\n                    <div\n                      v-for=\"(monthItem, mi) in months\"\n                      :key=\"mi\"\n                      v-bind=\"monthItem.attributes\"\n                      :class=\"[\n                        'vpd-addon-list-item',\n                        { 'vpd-selected': monthItem.selected },\n                        monthItem.attributes.class\n                      ]\"\n                      :disabled=\"monthItem.disabled\"\n                      :style=\"[\n                        { color: monthItem.selected ? color : '' },\n                        monthItem.attributes.style\n                      ]\"\n                      @click=\"selectMonth(monthItem)\"\n                    >\n                      <slot name=\"month-item\" v-bind=\"{ vm, monthItem, color }\">\n                        {{ monthItem.xFormat('jMMMM') }}\n                      </slot>\n                    </div>\n                  </div>\n                </div>\n              </transition>\n\n              <transition name=\"fade\">\n                <div\n                  v-if=\"hasStep('t')\"\n                  v-show=\"currentStep === 't'\"\n                  ref=\"time\"\n                  :class=\"[\n                    'vpd-addon-list vpd-time',\n                    { 'vpd-disabled': isDisableTime }\n                  ]\"\n                >\n                  <div class=\"vpd-addon-list-content\">\n                    <div :class=\"['vpd-time-h', classFastCounter]\">\n                      <btn\n                        class=\"vpd-up-arrow-btn\"\n                        @update=\"setTime(1, 'h')\"\n                        @fastUpdate=\"fastUpdateCounter\"\n                      >\n                        <arrow width=\"20\" direction=\"up\" />\n                      </btn>\n                      <div\n                        class=\"vpd-counter\"\n                        :class=\"directionClassTime\"\n                        @mousewheel.stop.prevent=\"wheelSetTime('h', $event)\"\n                      >\n                        <div\n                          v-for=\"(item, i) in time.format('HH').split('')\"\n                          :key=\"`h__${i}`\"\n                          class=\"vpd-counter-item\"\n                          v-bind=\"timeAttributes\"\n                        >\n                          <transition name=\"slideY\">\n                            <span\n                              :key=\"`${item}__${i}_h`\"\n                              :style=\"{\n                                transition:\n                                  'all ' +\n                                  timeData.transitionSpeed +\n                                  'ms ease-in-out'\n                              }\"\n                              v-text=\"convertToLocaleNumber(item)\"\n                            />\n                          </transition>\n                        </div>\n                      </div>\n                      <btn\n                        class=\"vpd-down-arrow-btn\"\n                        @update=\"setTime(-1, 'h')\"\n                        @fastUpdate=\"fastUpdateCounter\"\n                      >\n                        <arrow width=\"20\" direction=\"down\" />\n                      </btn>\n                    </div>\n                    <div :class=\"['vpd-time-m', classFastCounter]\">\n                      <btn\n                        class=\"vpd-up-arrow-btn\"\n                        @update=\"setTime(jumpMinute, 'm')\"\n                        @fastUpdate=\"fastUpdateCounter\"\n                      >\n                        <arrow width=\"20\" direction=\"up\" />\n                      </btn>\n                      <div\n                        class=\"vpd-counter\"\n                        :class=\"directionClassTime\"\n                        @mousewheel.stop.prevent=\"wheelSetTime('m', $event)\"\n                      >\n                        <div\n                          v-for=\"(item, i) in time.format('mm').split('')\"\n                          :key=\"`m__${i}`\"\n                          class=\"vpd-counter-item\"\n                          v-bind=\"timeAttributes\"\n                        >\n                          <transition name=\"slideY\">\n                            <span\n                              :key=\"`${item}__${i}_m`\"\n                              :style=\"{\n                                transition:\n                                  'all ' +\n                                  timeData.transitionSpeed +\n                                  'ms ease-in-out'\n                              }\"\n                              v-text=\"convertToLocaleNumber(item)\"\n                            />\n                          </transition>\n                        </div>\n                      </div>\n                      <btn\n                        class=\"vpd-down-arrow-btn\"\n                        @update=\"setTime(-jumpMinute, 'm')\"\n                        @fastUpdate=\"fastUpdateCounter\"\n                      >\n                        <arrow width=\"20\" direction=\"down\" />\n                      </btn>\n                    </div>\n                  </div>\n                </div>\n              </transition>\n\n              <transition name=\"fade\">\n                <span\n                  v-if=\"steps.length > 1 && currentStep !== 'd' && hasStep('d')\"\n                  class=\"vpd-close-addon\"\n                  @click=\"goStep('d')\"\n                >\n                  <slot name=\"close-btn\" v-bind=\"{ vm }\">x</slot>\n                </span>\n              </transition>\n\n              <br v-if=\"autoSubmit && !hasStep('t')\" />\n\n              <div v-else class=\"vpd-actions\">\n                <slot\n                  name=\"submit-btn\"\n                  v-bind=\"{ vm, canSubmit, color, submit, lang }\"\n                >\n                  <button\n                    type=\"button\"\n                    :disabled=\"!canSubmit\"\n                    :style=\"{ color }\"\n                    @click=\"submit\"\n                    v-text=\"lang.submit\"\n                  />\n                </slot>\n\n                <slot\n                  v-if=\"!inline\"\n                  name=\"cancel-btn\"\n                  v-bind=\"{ vm, color, lang }\"\n                >\n                  <button\n                    type=\"button\"\n                    :style=\"{ color }\"\n                    @click=\"visible = false\"\n                    v-text=\"lang.cancel\"\n                  />\n                </slot>\n\n                <slot\n                  v-if=\"showNowBtn && canGoToday\"\n                  name=\"now-btn\"\n                  v-bind=\"{ vm, color, goToday, lang }\"\n                >\n                  <button\n                    type=\"button\"\n                    :style=\"{ color }\"\n                    @click=\"goToday\"\n                    v-text=\"lang.now\"\n                  />\n                </slot>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </transition>\n  </span>\n</template>\n\n<script>\n\nimport Arrow from '././components/Arrow.vue'\nimport Btn from '././components/Btn.vue'\nimport CalendarIcon from './components/CalendarIcon.vue'\nimport TimeIcon from '././components/TimeIcon.vue'\nimport CoreModule from './modules/core'\nimport LocaleChange from '././components/LocaleChange'\nimport { cloneDates, isSameDay } from './modules/utils'\n\nexport default {\n  components: { LocaleChange, Arrow, Btn, CalendarIcon, TimeIcon },\n  model: {\n    prop: 'value',\n    event: 'input'\n  },\n  props: {\n    /**\n     * Default input value\n     * @type Number String\n     * @default []\n     * @example 1396/08/01 22:45 | 2017/07/07 20:45 | {unix} | 20:45\n     */\n    value: { type: [Number, String, Date, Array], default: '' },\n\n    /**\n     * Initial value of picker (if value is empty)\n     * @type Number String\n     * @default []\n     * @example 1370/01/01 22:45 | 2017/01/01 20:45 | {unix} | 20:45\n     * @version 1.0.9\n     */\n    initialValue: { type: [Number, String], default: '' },\n\n    /**\n     * Format for {value}\n     * @type String\n     * @default Null\n     * @example jYYYY/jMM/jDD HH:mm | YYYY/MM/DD HH:mm | x | unix | HH:mm\n     * @if empty {inputFormat} = {format}\n     * @see https://github.com/jalaali/moment-jalaali\n     */\n    inputFormat: { type: String, default: '' },\n\n    /**\n     * Format only to display the date in the field\n     * @type String\n     * @default Null\n     * @example jYYYY/jMM/jDD HH:mm | YYYY/MM/DD HH:mm | x | unix | HH:mm\n     * @if empty {displayFormat} = {format}\n     * @see https://github.com/jalaali/moment-jalaali\n     */\n    displayFormat: { type: String, default: '' },\n\n    /**\n     * Format for output value\n     * @type String\n     * @default Null\n     * @example jYYYY/jMM/jDD HH:mm | YYYY/MM/DD HH:mm | x | date | HH:mm\n     * @if empty, it will be built according to the type of picker:\n     *\n     * --- time:     HH:mm\n     * --- datetime: jYYYY/jMM/jDD HH:mm\n     * --- date:     jYYYY/jMM/jDD\n     * --- year:     jYYYY\n     * --- month:    jMM\n     *\n     * @see https://github.com/jalaali/moment-jalaali\n     */\n    format: { type: String, default: '' },\n\n    /**\n     * Step to view on startup\n     * @type String\n     * @default \"day\"\n     * @supported day | month | year | time\n     * @example year\n     * @desc {year} will show the \"year\" panel at first\n     */\n    view: { type: String, default: 'day' },\n\n    /**\n     * The picker type\n     * @type String\n     * @default \"date\"\n     * @supported date | datetime | year | month | time\n     */\n    type: { type: String, default: 'date' },\n\n    /**\n     * The minimum of selectable period\n     * Based on {inputFormat}\n     * @type String\n     * @default Null\n     * @example 1396/08/01 22:45 | 22:45\n     */\n    min: { type: [String], default: '' },\n\n    /**\n     * The maximum of selectable period\n     * Based on {inputFormat}\n     * @type String\n     * @default Null\n     * @example 1396/08/01 22:45 | 22:45\n     */\n    max: { type: [String], default: '' },\n\n    /**\n     * Editable input or just readonly\n     * @type Boolean\n     * @default False\n     * @if false, the picker will shown on input focus\n     * @if true, the picker will shown on label click\n     * @note if use <... :editable=\"true\"> with <... :element=\"...\">\n     *     then you have to control the <... :show=\"true or false\">\n     */\n    editable: { type: Boolean, default: false },\n\n    /**\n     * The specified input element ID\n     * @type String\n     * @default Undefined\n     * @desc Sometimes you don't want to use picker default input,\n     * so you can use our own input element with \"id\" attribute\n     * and use <... element=\"the_id_of_input\">\n     */\n    element: { type: String, default: undefined },\n\n    /**\n     * The form input name when not using {element}\n     * @type String\n     * @default Undefined\n     */\n    name: { type: String, default: undefined },\n\n    /**\n     * The form input className when not using {element}\n     * @type String\n     * @default \"form-control\"\n     */\n    inputClass: { type: String, default: 'form-control' },\n\n    /**\n     * The form input placeholder when not using {element}\n     * @type String\n     * @default Null\n     */\n    placeholder: { type: String, default: '' },\n\n    /**\n     * The name of hidden input element\n     * @type String\n     * @default Null\n     * @if empty, the hidden input will not be created\n     */\n    altName: { type: String, default: '' },\n\n    /**\n     * Format for hidden input\n     * @type String\n     * @default Null\n     * @example YYYY-MM-DD HH:mm:ss [GMT]ZZ\n     * @if empty, it will be built according to the type of picker:\n     *\n     * --- time:     HH:mm:ss [GMT]ZZ\n     * --- datetime: YYYY-MM-DD HH:mm:ss [GMT]ZZ\n     * --- date:     YYYY-MM-DD\n     * --- year:     YYYY\n     * --- month:    MM\n     */\n    altFormat: { type: String, default: '' },\n\n    /**\n     * Show or hide the picker\n     * @type Boolean\n     * @default False\n     */\n    show: { type: Boolean, default: false },\n\n    /**\n     * Primary color of picker\n     * @type String\n     */\n    color: { type: String, default: '#417df4' },\n\n    /**\n     * Auto submit and hide picker when date selected\n     * @type Boolean\n     * @default False\n     */\n    autoSubmit: { type: Boolean, default: false },\n\n    /**\n     * Auto submit when clicking the wrapper\n     * @type Boolean\n     * @default false\n     * @version 1.0.6\n     */\n    wrapperSubmit: { type: Boolean, default: false },\n\n    /**\n     * Place to append picker\n     * @type String query selector\n     * @default null\n     * @desc If you want to append picker to another container like 'body',\n     * pass the container as append-to=\"body\",  append-to=\"#app\",  append-to=\"#my-container\"\n     * @example 'body', '.main-container', '#app' ...\n     * @version 1.1.1\n     */\n    appendTo: { type: String, default: null },\n\n    /**\n     * Disable or enable the datepicker\n     * @type Boolean\n     * @default false\n     * @version 1.1.4\n     */\n    disabled: { type: Boolean, default: false },\n\n    /**\n     * Disabling\n     * @type Array, String, Function, RegExp\n     * @default undefined\n     * @desc disable some dates\n     * @example ['1397/02/02', '1390/10/10'] - \"1397/05/20\" - /1397\\/05\\/(.*)/ ...\n     * @version 1.1.4\n     */\n    disable: { type: [Array, String, Function, RegExp], default: undefined },\n\n    /**\n     * Label\n     * @type String\n     * @version 1.1.4\n     */\n    label: { type: String, default: '' },\n\n    /**\n     * Highlight items\n     * @type Function\n     * @desc This prop accepts only function that return an object of attributes.\n     * @version 1.1.5\n     */\n    highlight: { type: Function, default: null },\n\n    /**\n     * Change minutes by step\n     * @type Number\n     * @default 1\n     * @version: 1.1.6\n     */\n    jumpMinute: { type: Number, default: 1 },\n\n    /**\n     * Round minutes when jumpMinute is grater than 1\n     * @example when jumpMinute = 15 thin will result: 13:00, 13:15, 13:30, 13:45 ...\n     * @type Boolean\n     * @default false\n     * @version: 1.1.6\n     */\n    roundMinute: { type: Boolean, default: false },\n\n    /**\n     * Show clear button\n     * @type Boolean\n     * @default false\n     * @version 1.1.6\n     */\n    clearable: { type: Boolean, default: false },\n\n    /**\n     * Inline mode\n     * @type Boolean\n     * @default false\n     * @version 1.1.6\n     */\n    inline: { type: Boolean, default: false },\n\n    /**\n     * Locales config (\"fa\" for jalali and \"en\" for gregorian)\n     * @type String\n     * @default fa\n     * @example fa | en | fa,en | en,fa\n     * @supported fa,en\n     * @version 2.0.0\n     */\n    locale: { type: String, default: 'fa' },\n\n    /**\n     * Locale configuration\n     * @type Object\n     * @default {}\n     * @version 2.0.0\n     * @example\n     * {\n     *  fa: {\n     *      dow: 6,             --first day of week\n     *      dir: 'rtl',         --language direction\n     *      lang: {\n     *           label:     \"شمسی\",\n     *           submit:    \"تایید\",\n     *           cancel:    \"انصراف\",\n     *           now:       \"اکنون\",\n     *           nextMonth: \"ماه بعد\",\n     *           prevMonth: \"ماه قبل\",\n     *      }\n     *  },\n     *  en: { ... }\n     * }\n     */\n    localeConfig: { type: Object, default: () => ({}) },\n\n    /**\n     * Timezone configuration\n     * @type String | Boolean | Function\n     * @default false\n     * @example true | false | +03:30 | +04:30\n     * @version 2.1.0\n     */\n    timezone: { type: [Boolean, String, Function], default: false },\n\n    /**\n     * Show or hide NOW button\n     * @type Boolean\n     * @default true\n     * @version 2.1.6\n     */\n    showNowBtn: { type: Boolean, default: true },\n\n    /**\n     * Convert to locale numbers or not\n     * @type Boolean\n     * @default false\n     * @example <date-picker convert-numbers />\n     * @version 2.3.0\n     */\n    convertNumbers: { type: Boolean, default: false },\n\n    /**\n     * Display the time on the front page\n     * @type Boolean\n     * @default false\n     * @example <date-picker compact-time />\n     * @version 2.4.0\n     */\n    compactTime: { type: Boolean, default: false },\n\n    /**\n     * Enable or disable range mode\n     * @type Boolean\n     * @default false\n     * @example <date-picker range />\n     * @version 2.5.0\n     */\n    range: { type: Boolean, default: false },\n\n    /**\n     * Enable or disable multiple mode\n     * @type Boolean\n     * @default false\n     * @example <date-picker multiple />\n     * @version 2.6.0\n     */\n    multiple: { type: Boolean, default: false },\n\n    /**\n     * Enable or disable popover mode\n     * @type Boolean | String\n     * @accepted:\n     *    true | false\n     *    top-left | top-right | bottom-right | bottom-left\n     *    left-top | left-bottom | right-top | right-bottom\n     * @default false\n     * @example <date-picker popover />\n     * @example <date-picker popover=\"top-left\" />\n     * @version 2.6.0\n     */\n    popover: { type: [Boolean, String], default: false }\n  },\n  data() {\n    const defaultLocale = this.locale.split(',')[0]\n    const coreModule = new CoreModule(defaultLocale, this.localeConfig)\n    return {\n      core: coreModule,\n      now: coreModule.moment(),\n      date: {},\n      selectedDates: [],\n      hoveredItem: null,\n      visible: false,\n      directionClass: '',\n      directionClassDate: '',\n      directionClassTime: '',\n      classFastCounter: '',\n      steps: ['y', 'm', 'd', 't'],\n      step: 0,\n      shortCodes: {\n        year: 'y',\n        month: 'm',\n        day: 'd',\n        time: 't'\n      },\n      time: {},\n      timeData: {\n        transitionSpeed: 300,\n        timeout: false,\n        lastUpdate: new Date().getTime()\n      },\n      minDate: false,\n      maxDate: false,\n      output: [],\n      updateNowInterval: null,\n      locales: ['fa'],\n      localeData: coreModule.locale,\n      windowWidth: window.innerWidth,\n      popoverPlace: 'bottom-right'\n    }\n  },\n  computed: {\n    vm() {\n      return this\n    },\n    id() {\n      return (\n        '_' +\n        Math.random()\n          .toString(36)\n          .substr(2, 9)\n      )\n    },\n    currentStep() {\n      return this.steps[this.step]\n    },\n    selectedDate() {\n      const dates = this.selectedDates\n      return dates.length ? dates[dates.length - 1] : this.date\n    },\n    formattedDate() {\n      let format = ''\n\n      if (this.hasStep('y')) format = 'jYYYY'\n      if (this.hasStep('m')) format += ' jMMMM '\n      if (this.hasStep('d')) {\n        format = this.isDataArray ? 'jD jMMMM jYYYY' : 'ddd jD jMMMM'\n      }\n      if (this.hasStep('t')) format += ' HH:mm '\n\n      if (!format) return ''\n\n      const separator = this.multiple ? ' | ' : ' ~ '\n      return this.selectedDates.map(d => d.xFormat(format)).join(separator)\n    },\n    month() {\n      if (!this.hasStep('d')) return []\n      const min = this.minDate ? this.minDate.clone().startOf('day') : -Infinity\n      const max = this.maxDate ? this.maxDate.clone().endOf('day') : Infinity\n      return this.core.getWeekArray(this.date.clone()).map(weekItem => {\n        return weekItem.map(day => {\n          const data = {\n            date: day,\n            formatted: '',\n            selected: false,\n            disabled: false,\n            attributes: {}\n          }\n          if (!day) return data\n          const dayMoment = this.core.moment(day)\n          data.formatted = dayMoment.xDate()\n          data.selected = this.selectedDates.find(item => isSameDay(item, day))\n          data.disabled =\n            (this.minDate && dayMoment.clone().startOf('day') < min) ||\n            (this.maxDate && dayMoment.clone().endOf('day') > max) \n            || this.checkDisable('d', dayMoment)\n          if (this.range && !data.disabled) {\n            const [start, end] = this.selectedDates\n            data.isFirst = data.selected && start && isSameDay(start, day)\n            data.isLast = data.selected && end && isSameDay(end, day)\n            data.isBetween =\n              !data.selected && start && end && day > start && day < end\n          }\n          data.attributes = this.getHighlights('d', dayMoment)\n          return data\n        })\n      })\n    },\n    monthDays() {\n      if (!this.range || this.selectedDates.length !== 1 || !this.hoveredItem) { return this.month }\n      const dates = [this.hoveredItem, this.selectedDates[0]]\n      dates.sort((a, b) => a - b)\n      const [start, end] = dates\n      return this.month.map(weekItem => {\n        return weekItem.map(data => {\n          if (!data.date) return data\n          if (this.range && !data.disabled) {\n            const day = data.date\n            data.isHover = !data.selected && day > start && day < end\n          }\n          return data\n        })\n      })\n    },\n    years() {\n      if (!this.hasStep('y') || this.currentStep !== 'y') return []\n      const moment = this.core.moment\n      const min = this.minDate ? this.minDate : moment('1300', 'jYYYY')\n      const max = this.maxDate ? this.maxDate : min.clone().add(150, 'year')\n      const cy = this.date.xYear()\n      return this.core\n        .getYearsList(min.xYear(), max.xYear())\n        .reverse()\n        .map(item => {\n          const year = moment().xYear(item)\n          year.selected = cy === item\n          year.disabled = this.checkDisable('y', item)\n          year.attributes = this.getHighlights('y', item)\n          return year\n        })\n    },\n    months() {\n      if (this.hasStep('m')) {\n        const date = this.date.clone().xStartOf('month')\n        const months = this.core.getMonthsList(this.minDate, this.maxDate, date)\n        months.forEach(m => {\n          m.selected = this.date.xMonth() === m.xMonth()\n          m.disabled = m.disabled || this.checkDisable('m', m)\n          m.attributes = this.getHighlights('m', m)\n        })\n        return months\n      }\n      return []\n    },\n    prevMonthDisabled() {\n      return (\n        this.hasStep('d') &&\n        this.minDate &&\n        this.minDate.clone().xStartOf('month') >=\n          this.date.clone().xStartOf('month')\n      )\n    },\n    nextMonthDisabled() {\n      return (\n        this.hasStep('d') &&\n        this.maxDate &&\n        this.maxDate.clone().xStartOf('month') <=\n          this.date.clone().xStartOf('month')\n      )\n    },\n    canGoToday() {\n      if (!this.minDate && !this.maxDate) return true\n      const now = this.now\n      let min = this.minDate && this.minDate <= now\n      let max = this.maxDate && now <= this.maxDate\n\n      if (this.type === 'time') {\n        if (this.minDate) {\n          min = now\n            .clone()\n            .hour(this.minDate.hour())\n            .minute(this.minDate.minute())\n          min = min <= now\n        }\n        if (this.maxDate) {\n          max = this.now\n            .clone()\n            .hour(this.maxDate.hour())\n            .minute(this.maxDate.minute())\n          max = now <= max\n        }\n      }\n\n      if (this.minDate && this.maxDate) return min && max\n      if (this.minDate) return min\n      if (this.maxDate) return max\n      return false\n    },\n    altFormatted() {\n      let format = this.altFormat\n      if (format === '' || format === undefined) {\n        switch (this.type) {\n          case 'time':\n            format = 'HH:mm:ss [GMT]ZZ'\n            break\n          case 'datetime':\n            format = 'YYYY-MM-DD HH:mm:ss [GMT]ZZ'\n            break\n          case 'date':\n            format = 'YYYY-MM-DD'\n            break\n          case 'year':\n            format = 'YYYY'\n            break\n          case 'month':\n            format = 'MM'\n            break\n          case 'year-month':\n            format = 'YYYY-MM'\n            break\n        }\n      }\n      return this.output.map(d => d.format(format)).join(' ~ ')\n    },\n    selfFormat() {\n      let format = this.format\n      if (['', undefined, 'date'].indexOf(format) !== -1) {\n        switch (this.type) {\n          case 'time':\n            format = 'HH:mm'\n            break\n          case 'datetime':\n            format = 'jYYYY/jMM/jDD HH:mm'\n            break\n          case 'date':\n            format = 'jYYYY/jMM/jDD'\n            break\n          case 'year':\n            format = 'jYYYY'\n            break\n          case 'month':\n            format = 'jMM'\n            break\n          case 'year-month':\n            format = 'jYYYY/jMM'\n            break\n        }\n      }\n      return format\n    },\n    selfInputFormat() {\n      return this.inputFormat === '' || this.inputFormat === undefined\n        ? this.selfFormat\n        : this.inputFormat\n    },\n    outputValue() {\n      const output = cloneDates(this.output)\n      const format = this.selfFormat\n      const isDate = this.value instanceof Date || this.format === 'date'\n      return output.map(item => {\n        /j\\w/.test(format) && item.locale('fa')\n        this.setTimezone(item, 'out')\n        return isDate ? item.toDate() : item.format(format)\n      })\n    },\n    selfDisplayFormat() {\n      let format = this.displayFormat || this.selfFormat\n      const localeFormat = this.localeData.config.displayFormat\n      if (localeFormat) {\n        return typeof localeFormat === 'function'\n          ? localeFormat(this)\n          : localeFormat\n      }\n      if (this.localeData.name !== 'fa') {\n        format = format.replace(/j/g, '')\n      }\n      return format\n    },\n    displayValue() {\n      const format = this.selfDisplayFormat\n      return this.output\n        .map(item => {\n          const output = item.clone()\n          ;/j\\w/.test(format) && output.locale('fa')\n          return this.convertToLocaleNumber(output.format(format))\n        })\n        .join(' ~ ')\n    },\n    isDisableTime() {\n      return this.hasStep('t') && this.checkDisable('t', this.time)\n    },\n    timeAttributes() {\n      return this.hasStep('t') ? this.getHighlights('t', this.time) : {}\n    },\n    canSubmit() {\n      if (!this.disable) return true\n      let can = true\n      if (this.hasStep('t')) can = !this.isDisableTime\n      if (can && this.type !== 'time') can = !this.checkDisable('d', this.date)\n      return can\n    },\n    weekDays() {\n      const names = JSON.parse(\n        JSON.stringify(\n          this.core\n            .moment()\n            .localeData()\n            .weekdaysMin()\n        )\n      )\n      let dow = this.core.locale.config.dow\n      while (dow > 0) {\n        names.push(names.shift())\n        dow--\n      }\n      return names\n    },\n    lang() {\n      return this.localeData.config.lang\n    },\n    isPopover() {\n      return (this.popover === '' || this.popover) && this.windowWidth > 480\n    },\n    isDataArray() {\n      return this.range || this.multiple\n    }\n  },\n  watch: {\n    type: { handler: 'setType', immediate: true },\n    view: { handler: 'setView', immediate: true },\n    value: { handler: 'updateDates', immediate: true },\n    min: { handler: 'setMinMax', immediate: true },\n    max: { handler: 'setMinMax', immediate: true },\n    timezone: { handler: 'updateDates' },\n    inline: {\n      handler(val) {\n        if (!this.disabled) this.visible = !!val\n      },\n      immediate: true\n    },\n    disabled: {\n      handler(val) {\n        if (val) this.visible = false\n        else if (this.inline) this.visible = true\n      },\n      immediate: true\n    },\n    selectedDate(val, old) {\n      this.setDirection('directionClass', val, old)\n    },\n    date(val, old) {\n      this.setDirection('directionClassDate', val, old)\n      if (this.isLower(this.date)) this.date = this.minDate.clone()\n      if (this.isMore(this.date)) this.date = this.maxDate.clone()\n    },\n    time: {\n      handler(val, old) {\n        if (this.hasStep('t') && this.roundMinute) {\n          const time = this.time.clone()\n          const jm = this.jumpMinute\n          const m = (jm - (time.minute() % jm)) % jm\n          time.add({ m })\n          if (time.valueOf() !== this.time.valueOf()) {\n            this.time = time\n            // @todo: this line should apply time to current date selection,\n            // not all of them\n            this.selectedDates.forEach(d => d.set({ m: time.minute() }))\n          }\n        }\n        if (old) this.setDirection('directionClassTime', val, old)\n      },\n      immediate: true\n    },\n    visible(val) {\n      if (val) {\n        if (this.disabled) return (this.visible = false)\n        if (this.type === 'datetime' && this.view === 'day') this.goStep('d')\n        if (this.view !== 'day') this.goStep(this.shortCodes[this.view] || 'd')\n        this.$nextTick(() => {\n          if (this.appendTo) {\n            try {\n              const container = document.querySelector(this.appendTo)\n              container.appendChild(this.$refs.picker)\n            } catch (er) {\n              // eslint-disable-next-line\n              console.warn(`Cannot append picker to \"${this.appendTo}\"!`)\n            }\n          }\n        })\n        this.checkScroll()\n        this.setPlacement()\n        this.$emit('open', this)\n      } else {\n        if (this.inline && !this.disabled) return (this.visible = true)\n        this.$emit('close', this)\n      }\n    },\n    show(val) {\n      this.visible = val\n    },\n    locale: {\n      immediate: true,\n      handler(val) {\n        const locales = val.toString().split(',')\n        this.locales = locales.length ? locales : ['fa']\n        if (this.core.locale.name !== this.locales[0]) { this.setLocale(this.locales[0]) }\n      }\n    },\n    localeConfig: {\n      deep: true,\n      immediate: true,\n      handler(config) {\n        this.core.setLocalesConfig(config)\n        this.setLocale(this.localeData.name)\n      }\n    },\n    'localeData.name'() {\n      this.$emit('localeChange', this.localeData)\n      this.setMinMax()\n    }\n  },\n  created() {\n    this.updateNowInterval = setInterval(() => {\n      this.now = this.core.moment()\n    }, 1000)\n  },\n  mounted() {\n    this.$nextTick(() => {\n      const addEvent = (el, type, handler) => {\n        if (el.attachEvent) el.attachEvent('on' + type, handler)\n        else el.addEventListener(type, handler)\n      }\n      const live = (selector, event, callback, context) => {\n        addEvent(context || document, event, function(e) {\n          let found\n          let el = e.target || e.srcElement\n          while (el && !(found = el.id === selector)) el = el.parentElement\n          if (found) callback.call(el, e)\n        })\n      }\n      if (this.element && !this.editable) {\n        live(this.element, 'click', this.focus)\n      }\n    })\n    document.body.addEventListener('keydown', e => {\n      e = e || event\n      const code = e.keyCode\n      if ((code === 9 || code === 27) && this.visible) this.visible = false\n    })\n    window.addEventListener('resize', this.onWindowResize, true)\n    window.addEventListener('mousedown', this.onWindowClick, true)\n  },\n  onBeforeUnmount() {\n    console.log('onBeforeUnmount')\n    window.clearInterval(this.updateNowInterval)\n    window.removeEventListener('resize', this.onWindowResize, true)\n    window.removeEventListener('mousedown', this.onWindowClick, true)\n    const picker = this.$refs.picker\n    if (this.appendTo && picker && picker.$el && picker.$el.parentNode) {\n      picker.$el.parentNode.removeChild(picker.$el)\n    }\n  },\n  methods: {\n    nextStep() {\n      let step = this.step + 1\n      if (this.compactTime && this.type === 'datetime') step += 1\n      if (this.steps.length <= step) {\n        const passSelected = this.selectedDates.length >= (this.range ? 2 : 1)\n        if ((this.autoSubmit || this.inline) && passSelected) {\n          this.submit(!this.multiple)\n        }\n      } else {\n        this.step++\n        this.goStep(this.step)\n      }\n    },\n    goStep(i) {\n      this.step = typeof i === 'number' ? i : this.steps.indexOf(i)\n      this.checkScroll()\n    },\n    checkScroll() {\n      const step = this.currentStep\n      if (step === 'y' || (step === 'm' && this.visible)) {\n        setTimeout(() => {\n          const container = this.$refs[{ y: 'year', m: 'month' }[step]]\n          if (container) {\n            const selected = container.querySelector('.vpd-selected')\n            if (selected && 'scrollIntoView' in selected) {\n              try {\n                selected.scrollIntoView({ block: 'center' })\n              } catch (er) {\n                selected.scrollIntoView()\n              }\n            }\n          }\n        }, 100)\n      }\n    },\n    fastUpdateCounter(e) {\n      if (!e) this.timeData.transitionSpeed = 300\n      this.classFastCounter = e ? 'fast-updating' : ''\n    },\n    nextMonth() {\n      this.date = this.date.clone().xAdd(1, 'month')\n    },\n    prevMonth() {\n      this.date = this.date.clone().xAdd(-1, 'month')\n    },\n    selectDay(day) {\n      if (!day.date || day.disabled) return\n      const date = this.core.moment(day.date)\n      date.set({\n        hour: this.time.hour(),\n        minute: this.time.minute(),\n        second: 0\n      })\n      this.date = date.clone()\n      this.time = date.clone()\n      if (this.range) {\n        const length = this.selectedDates.length\n        if (!length || length > 1) {\n          this.selectedDates = [date.clone()]\n        } else {\n          this.selectedDates.push(date.clone())\n          this.selectedDates.sort((a, b) => a - b)\n        }\n      } else if (this.multiple) {\n        const exists = this.selectedDates.findIndex(\n          d => d.valueOf() === date.valueOf()\n        )\n        if (exists > -1) {\n          this.selectedDates.splice(exists, 1)\n        } else {\n          this.selectedDates.push(date.clone())\n        }\n      } else {\n        this.selectedDates = [date.clone()]\n      }\n      this.nextStep()\n    },\n    selectYear(year) {\n      if (year.disabled) return\n      this.date = this.date.clone().xYear(year.xYear())\n      this.nextStep()\n    },\n    selectMonth(month) {\n      if (month.disabled) return\n      this.date = this.date.clone().xMonth(month.xMonth())\n      this.nextStep()\n    },\n    setTime(v, k) {\n      let time = this.time.clone()\n\n      time.add({ [k]: v })\n\n      if (this.type !== 'time') {\n        const date = this.date.clone()\n        time.set({ year: date.year(), month: date.month(), date: date.date() })\n        date.set({ hour: time.hour(), minute: time.minute() })\n        this.date = date\n      }\n\n      if (this.isLower(time)) time = this.minDate.clone()\n      if (this.isMore(time)) time = this.maxDate.clone()\n\n      this.time = time\n\n      const now = new Date().getTime()\n      const def = now - this.timeData.lastUpdate\n      if (def > 20 && def < 300) this.timeData.transitionSpeed = def\n      this.timeData.lastUpdate = now\n\n      window.clearTimeout(this.timeData.timeout)\n      this.timeData.timeout = window.setTimeout(() => {\n        this.timeData.transitionSpeed = 300\n      }, 300)\n    },\n    wheelSetTime(k, e) {\n      const delta = k === 'm' ? this.jumpMinute : 1\n      this.setTime(e.wheelDeltaY > 0 ? delta : -delta, k)\n    },\n    submit(close = true) {\n      let steps = this.steps.length - 1\n      const selected = this.selectedDates\n      if (this.compactTime && this.type === 'datetime') steps -= 1\n      if (this.step < steps) return this.nextStep()\n\n      if (this.hasStep('t')) {\n        const t = { hour: this.time.hour(), minute: this.time.minute() }\n        this.date = this.date.set(t).clone()\n        this.selectedDates = selected.map(d => d.set(t).clone())\n      }\n\n      if (['year', 'month', 'year-month'].indexOf(this.type) !== -1) { this.selectedDates = selected.map(() => this.date.clone()) }\n\n      if (this.range && selected.length > 1) {\n        selected[0].xStartOf('day')\n        selected[1].xEndOf('day')\n      }\n\n      this.output = cloneDates(selected)\n      if (close) this.visible = false\n\n      if (this.isDataArray) {\n        this.$emit('input', this.outputValue)\n        this.$emit('change', cloneDates(selected))\n      } else {\n        this.$emit('input', this.outputValue[0])\n        this.$emit('change', selected[0].clone())\n      }\n    },\n    updateDates(payload) {\n      if (this.isDataArray && !payload) payload = []\n\n      const payloadIsArray = payload instanceof Array\n      const getDate = (input, index = 0) => {\n        let date\n        const startValue =\n          this.value instanceof Array ? this.value[index] : this.value\n        try {\n          const isObject = typeof input === 'object'\n          if (input instanceof Date) {\n            date = this.getMoment(input)\n          } else if (input && isObject && 'clone' in input) {\n            date = input.clone()\n          } else if (input === null || !isObject) {\n            date = this.getMoment(input || startValue || this.initialValue)\n          }\n          date = date.isValid() ? date : this.core.moment()\n        } catch (e) {\n          date = this.core.moment()\n        }\n        this.setTimezone(date, 'in')\n        return date\n      }\n\n      if (payloadIsArray) {\n        this.date = getDate(payload[0])\n        this.selectedDates = payload.map(getDate)\n      } else {\n        this.date = getDate(payload)\n      }\n\n      if (!this.hasStep('t')) this.date.set({ hour: 0, minute: 0, second: 0 })\n\n      if (this.isLower(this.date)) {\n        this.date = this.minDate.clone()\n      } else if (this.isMore(this.date)) {\n        this.date = this.maxDate.clone()\n      }\n\n      if (!payloadIsArray) this.selectedDates = [this.date.clone()]\n      this.time = this.date.clone()\n\n      if (this.value !== '' && this.value !== null && this.value.length) {\n        this.output = cloneDates(this.selectedDates)\n      } else {\n        this.output = []\n        // this.$forceUpdate()\n      }\n    },\n    goToday() {\n      const now = this.core.moment()\n      if (!this.hasStep('t')) now.set({ hour: 0, minute: 0, second: 0 })\n      this.date = now.clone()\n      this.time = now.clone()\n      this.selectedDates = [now.clone()]\n    },\n    setType() {\n      switch (this.type) {\n        case 'date':\n          this.steps = ['y', 'm', 'd']\n          this.goStep('d')\n          break\n        case 'datetime':\n          this.steps = ['y', 'm', 'd', 't']\n          this.goStep('d')\n          break\n        case 'year':\n          this.steps = ['y']\n          this.goStep('y')\n          break\n        case 'month':\n          this.steps = ['m']\n          this.goStep('m')\n          break\n        case 'time':\n          this.steps = ['t']\n          this.goStep('t')\n          break\n        case 'year-month':\n          this.steps = ['y', 'm']\n          this.goStep('y')\n          break\n      }\n    },\n    setView() {\n      const s = this.shortCodes[this.view]\n      if (this.hasStep(s)) this.goStep(s)\n    },\n    setDirection(prop, val, old) {\n      this[prop] = val > old ? 'direction-next' : 'direction-prev'\n    },\n    setMinMax() {\n      const min = this.getMoment(this.min)\n      const max = this.getMoment(this.max)\n      this.minDate = this.min && min.isValid() ? min : false\n      this.maxDate = this.max && max.isValid() ? max : false\n    },\n    getMoment(date) {\n      let d\n      const moment = this.core.moment\n\n      if (date instanceof Date) return moment(date)\n\n      if (this.selfInputFormat === 'x' || this.selfInputFormat === 'unix') {\n        d = moment(date.toString().length === 10 ? date * 1000 : date * 1)\n      } else {\n        try {\n          if (date) {\n            let a = moment(date, this.selfInputFormat)\n            let b = moment(date, this.selfFormat)\n            const now = moment()\n            const year = now.xYear()\n            if (this.type === 'month') {\n              a.xYear(year)\n              b.xYear(year)\n            } else if (this.type === 'time') {\n              a = now.clone().set({\n                h: a.hour(),\n                m: a.minute(),\n                s: 0\n              })\n              b = a.clone()\n            }\n            if (a.year() !== b.year() && a.year() < 1900) {\n              d = b.clone()\n            } else {\n              d = a.clone()\n            }\n          } else {\n            d = moment()\n          }\n        } catch (er) {\n          d = moment()\n        }\n      }\n      return d\n    },\n    focus(e) {\n      if (this.editable) {\n        if (this.$refs.input) this.$refs.input.focus()\n      } else {\n        if (e) {\n          e.preventDefault()\n          e.stopPropagation()\n          e.target.blur()\n          this.visible = !this.visible\n        } else {\n          this.visible = true\n        }\n        return false\n      }\n    },\n    hasStep(step) {\n      return this.steps.indexOf(step) !== -1\n    },\n    setOutput(e) {\n      if (!this.editable) return\n      const value = e.target.value.split('~')\n\n      const output = value.map(item => {\n        item = `${item}`.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '')\n        if (item === '') return null\n        try {\n          const date = this.core.moment(item, this.selfDisplayFormat)\n          return date.isValid() ? date : null\n        } catch (er) {\n          return null\n        }\n      })\n\n      this.output = output.filter(d => d)\n      this.output.sort((a, b) => a - b)\n\n      if (this.output.length) {\n        this.updateDates(cloneDates(this.output))\n        this.submit()\n      } else {\n        // this.$forceUpdate()\n        this.$emit('input', this.isDataArray ? [] : null)\n        this.$emit('change', this.isDataArray ? [] : null)\n      }\n    },\n    wrapperClick() {\n      this.visible = false\n      if (this.wrapperSubmit && this.canSubmit) {\n        this.submit()\n      }\n    },\n    applyDevFn(fn, k) {\n      let result = false\n      const args = Array.prototype.splice.call(arguments, 2)\n      try {\n        args.push({ y: 'year', m: 'month', d: 'day', t: 'time' }[k])\n        result = fn.apply(null, args)\n      } catch (er) {\n        // eslint-disable-next-line\n        console.error(er)\n      }\n      return result\n    },\n    checkDisable(item, value) {\n      const thisDisable = this.disable\n      if (!thisDisable) return false\n      const type = typeof thisDisable\n\n      const checkString = (filter, str, date) => {\n        if (filter instanceof RegExp) return filter.test(str)\n        if (filter === str) return true\n        if (item === 'd') {\n          const length = filter.length\n          return (\n            str.substr(0, length) === filter ||\n            date\n              .clone()\n              .locale('en')\n              .format('dddd') === filter\n          )\n        }\n        return false\n      }\n\n      const check = (date, dateFormatted) => {\n        let matches = false\n        if (type === 'function') {\n          return this.applyDevFn(thisDisable, item, dateFormatted, date.clone())\n        } else if (\n          Object.prototype.toString.call(thisDisable) === '[object Array]'\n        ) {\n          const ii = thisDisable.length\n          for (let i = 0; i < ii; i++) {\n            matches = checkString(thisDisable[i], dateFormatted, date)\n            if (matches) break\n          }\n          return matches\n        } else if (type === 'string' || thisDisable instanceof RegExp) {\n          return checkString(thisDisable, dateFormatted, date)\n        }\n        return false\n      }\n\n      let format = this.selfFormat\n      if (item === 'y') {\n        value = this.core.moment(value, 'jYYYY')\n      } else if (item === 'd') {\n        // remove time from format\n        format = format.replace(/(H(H?))|(h(h?))?(:?)m(m?)(:?)(s(s?))?/g, '')\n      }\n      return check(value, value.format(format))\n    },\n    getHighlights(item, value) {\n      const highlight = this.highlight\n      if (!highlight || typeof highlight !== 'function') return {}\n      if (item === 'y') value = this.core.moment(value, 'jYYYY')\n      return (\n        this.applyDevFn(\n          highlight,\n          item,\n          value.format(this.selfFormat),\n          value.clone()\n        ) || {}\n      )\n    },\n    isLower(date) {\n      return this.minDate && date < this.minDate\n    },\n    isMore(date) {\n      return this.maxDate && date > this.maxDate\n    },\n    clearValue() {\n      if (this.disabled) return\n      this.output = []\n      this.$emit('input', this.isDataArray ? [] : '')\n      this.$emit('change', this.isDataArray ? [] : null)\n    },\n    setLocale(locale) {\n      this.core.changeLocale(locale, this.localeConfig)\n      this.date = this.date.clone()\n      this.selectedDates = this.selectedDates.map(d => d.clone())\n      // this.$forceUpdate()\n    },\n    setTimezone(date, mode) {\n      const tz = this.timezone\n      if (tz) {\n        const r = mode === 'in' ? 1 : -1\n        const moment = this.core.moment\n        if (typeof tz === 'string') {\n          const t =\n            moment()\n              .utc()\n              .format('YYYY-MM-DDTHH:mm:ss') + tz\n          date.add(moment.parseZone(t).utcOffset() * r, 'minutes')\n        } else if (typeof tz === 'boolean' && tz) {\n          date.subtract(new Date(date).getTimezoneOffset() * r, 'minutes')\n        } else if (typeof tz === 'function') {\n          date = tz(date, mode, this)\n        }\n      }\n      return date.clone()\n    },\n    convertToLocaleNumber(value) {\n      if (this.convertNumbers && this.locale === 'fa') {\n        return `${value}`.replace(/\\d+/g, function(digit) {\n          let ret = ''\n          for (let i = 0, len = digit.length; i < len; i++) {\n            ret += String.fromCharCode(digit.charCodeAt(i) + 1728)\n          }\n          return ret\n        })\n      }\n      return value\n    },\n    onWindowResize() {\n      this.windowWidth = window.innerWidth\n    },\n    onWindowClick(event) {\n      if (this.isPopover && this.$refs.picker && this.$refs.inputGroup) {\n        const isOnPicker = this.$refs.picker.contains(event.target)\n        const isOnInput = this.$refs.inputGroup.contains(event.target)\n        if (isOnPicker) event.preventDefault()\n        if (!isOnPicker && !isOnInput) {\n          // setTimeout because:\n          // first read the input value\n          // then process the output\n          // then close the picker\n          setTimeout(() => (this.visible = false), this.editable ? 500 : 0)\n        }\n      }\n    },\n    setPlacement() {\n      if (!this.isPopover) return\n      const allowed = [\n        'top-left',\n        'top-right',\n        'bottom-right',\n        'bottom-left',\n        'left-top',\n        'left-bottom',\n        'right-top',\n        'right-bottom'\n      ]\n      if (allowed.indexOf(this.popover) !== -1) { return (this.popoverPlace = this.popover) }\n\n      this.popoverPlace = 'bottom-right'\n      this.$nextTick(() => {\n        const placement = ['bottom', 'right']\n        const container = this.$refs.container\n        const rect = container.getBoundingClientRect()\n        const left = rect.left\n        const bottom = window.innerHeight - rect.bottom\n        if (bottom <= 0) placement[0] = 'top'\n        if (left <= 0) placement[1] = 'left'\n        this.popoverPlace = placement.join('-')\n      })\n    }\n  },\n  install(Vue, options) {\n    const component = this\n    options = Vue.util.extend(\n      {\n        name: 'data-picker',\n        props: {}\n      },\n      options\n    )\n\n    for (const k in options.props) {\n      if (Object.prototype.hasOwnProperty.call(component.props, k)) {\n        component.props[k].default = options.props[k]\n      }\n    }\n    Vue.component(options.name, component)\n  }\n}\n</script>\n"],"sourceRoot":""}]}